{"ast":null,"code":"var _jsxFileName = \"/home/chandan/code/website/reactProjectAkhil/backend/JobCatalogue/react_code/src/view/jsx/InvokeBackend.jsx\";\nimport React from 'react';\n\nconst callBackend = require(\"../../services/CallSpring\").callBackend;\n\nimport { Form, Button } from 'react-bootstrap';\n\nclass InvokeBackend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backendData: {}\n    }; //using vanilla state as its a simple use case should use redux insted\n  }\n\n  fileCall() {\n    callBackend() //using fetch as its esc default\n    .then(res => res.json()).then(data => {\n      console.log(JSON.stringify(data));\n      this.setState({\n        backendData: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    const data = this.state.backendData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Button, {\n      inline: true,\n      variant: \"primary\",\n      onClick: e => this.fileCall(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Call\"))), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, data.source));\n  }\n\n}\n\nexport default InvokeBackend;","map":{"version":3,"sources":["/home/chandan/code/website/reactProjectAkhil/backend/JobCatalogue/react_code/src/view/jsx/InvokeBackend.jsx"],"names":["React","callBackend","require","Form","Button","InvokeBackend","Component","constructor","props","state","backendData","fileCall","then","res","json","data","console","log","JSON","stringify","setState","catch","render","e","source"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAAP,CAAqCD,WAAzD;;AACA,SAASE,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;AAEA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb,CAFe,CAEkB;AACpC;;AAEDC,EAAAA,QAAQ,GAAE;AACNV,IAAAA,WAAW,GAAE;AAAF,KACNW,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAZ;AACA,WAAKK,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEK;AAAf,OAAd;AACH,KALL,EAMKM,KANL,CAMWL,OAAO,CAACC,GANnB;AAOH;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAMP,IAAI,GAAG,KAAKN,KAAL,CAAWC,WAAxB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,OAAO,EAAC,SAAvB;AAAiC,MAAA,OAAO,EAAGa,CAAD,IAAO,KAAKZ,QAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,IAAI,CAACS,MADV,CANJ,CADJ;AAYH;;AA/BuC;;AAkC5C,eAAenB,aAAf","sourcesContent":["import React from 'react';\nconst callBackend = require(\"../../services/CallSpring\").callBackend\nimport { Form, Button } from 'react-bootstrap';\n\nclass InvokeBackend extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { backendData: {} };//using vanilla state as its a simple use case should use redux insted\n    }\n\n    fileCall(){\n        callBackend()//using fetch as its esc default\n            .then(res => res.json())\n            .then((data) => {\n                console.log(JSON.stringify(data))\n                this.setState({ backendData: data })\n            })\n            .catch(console.log);\n    }\n\n    render() {\n        const data = this.state.backendData;\n\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Button inline variant=\"primary\" onClick={(e) => this.fileCall()}>Call</Button>\n                    </Form.Group>\n                </Form>\n                <ol>\n                    {data.source}\n                </ol>\n            </div>\n        );\n    }\n}\n\nexport default InvokeBackend;"]},"metadata":{},"sourceType":"module"}